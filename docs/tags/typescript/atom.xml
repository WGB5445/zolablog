<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>不霁何虹的博客 - TypeScript</title>
    <subtitle>一些 Web3.0 和 一些 有趣的事情</subtitle>
    <link href="/tags/typescript/atom.xml" rel="self" type="application/atom+xml"/>
    <link href="/"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2023-07-22T19:04:23+00:00</updated>
    <id>/tags/typescript/atom.xml</id>
    <entry xml:lang="en">
        <title>用 Solidjs 搭建第一个网页</title>
        <published>2023-07-22T19:04:23+00:00</published>
        <updated>2023-07-22T19:04:23+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="/solid-js-1/" type="text/html"/>
        <id>/solid-js-1/</id>
        
        <content type="html">&lt;h2 id=&quot;xin-yi-dai-gao-xing-neng-de-javascript-ui-ku&quot;&gt;新一代高性能的 JavaScript UI 库&lt;&#x2F;h2&gt;
&lt;p&gt;Solidjs 和 Vue、React 类似都是前端框架，不过 Solidjs 没有采用虚拟 DOM 实现，编译后的 Js 依赖会很小，同时运行速度也不慢。
写起来的感觉约等于 React，以后我准备多用 Solid 接活了(缺点就是没 React 库多...)&lt;&#x2F;p&gt;
&lt;h3 id=&quot;solidjs-de-te-xing&quot;&gt;SolidJS 的特性&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;响应式编程：SolidJS 采用 Fine-grained Reactivity 模型，可以对组件进行细粒度的响应式追踪，仅在数据变化时更新必要的 DOM 部分。这使得 SolidJS 在处理大规模数据时表现出色，并且能够实现更高效的性能。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;组件化开发：SolidJS 采用类似于 React 的组件化开发模式，允许开发者将 UI 拆分成小块、可复用的组件，提高代码的可维护性和复用性。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;模板语法：SolidJS 支持类似于 JSX 的模板语法，使得编写组件的代码更加简洁易读。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;优秀的 TypeScript 支持：SolidJS 原生支持 TypeScript，提供了完整的类型检查和智能提示，帮助开发者减少潜在的错误。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;无虚拟 DOM（No Virtual DOM）：SolidJS 与传统虚拟 DOM 不同，它使用了 Fine-grained Reactivity 来实现 DOM 更新，从而不需要创建中间状态的虚拟 DOM 对象，减少了内存开销和运算时间。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;kuai-su-kai-shi&quot;&gt;快速开始&lt;&#x2F;h2&gt;
&lt;p&gt;使用 SolidJS 构建项目非常简单，我推荐使用 Vite 创建一个新项目，因为 webpack 太难用了..(生理不适)&lt;&#x2F;p&gt;
&lt;h3 id=&quot;chuang-jian-xiang-mu&quot;&gt;创建项目&lt;&#x2F;h3&gt;
&lt;p&gt;根据 Vite 官网指示，用 &lt;a href=&quot;https:&#x2F;&#x2F;pnpm.io&#x2F;&quot;&gt;pnpm&lt;&#x2F;a&gt; 来创建项目(相比于 npm 、Yarn 能节省宝贵的磁盘空间)&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;pnpm create vite my-solid-project --template solid-ts
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;jin-ru-mu-lu&quot;&gt;进入目录&lt;&#x2F;h3&gt;
&lt;p&gt;然后就可以进入到目录中并执行 &lt;code&gt;pnpm install&lt;&#x2F;code&gt; 安装依赖&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;cd my-solid-project
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;an-zhuang-yi-lai&quot;&gt;安装依赖&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;pnpm install
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;qi-dong-dev-kai-fa-fu-wu-qi&quot;&gt;启动 Dev 开发服务器&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;pnpm dev
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;da-kai-wang-ye&quot;&gt;打开网页&lt;&#x2F;h3&gt;
&lt;p&gt;浏览器访问 &lt;code&gt;http:&#x2F;&#x2F;localhost:5173&lt;&#x2F;code&gt; 就可以看到你第一个 Solidjs 的页面啦
点击 屏幕上的 &lt;code&gt;count is 0&lt;&#x2F;code&gt; 按钮就能看到按钮中的数字在 +1 +1 +1 +1&lt;&#x2F;p&gt;
&lt;h2 id=&quot;cheng-gong&quot;&gt;成功&lt;&#x2F;h2&gt;
&lt;p&gt;好！下期再见！&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
